{"version":3,"sources":["../../../src/js/components/text/list.jsx"],"names":["List","contents","props","items","map","item","i","obj","isElement","Object","keys","indexOf","content","theme","list","ordered","id","unstyled","inline","React","Component","propTypes","PropTypes","string","array","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,I;;;;;;;;;;;6BACK;AACP,UAAMC,WAAW,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,CAAP,EAAa;AACjD,YAAMC,MAAM,EAAZ;AACA,YAAMC,YAAYC,OAAOC,IAAP,CAAYL,IAAZ,EAAkBM,OAAlB,CAA0B,MAA1B,KAAqC,CAAvD;AACA,YAAI,OAAON,IAAP,KAAgB,QAApB,EAA8B;AAC5BE,cAAIK,OAAJ,GAAcP,IAAd;AACD,SAFD,MAEO,IAAI,CAACG,SAAL,EAAgB;AACrBD,cAAIK,OAAJ,GAAcP,KAAKO,OAAnB;AACAL,cAAIM,KAAJ,GAAYR,KAAKQ,KAAjB;AACD;AACD,eAAO,CAACL,SAAD,GACL;AAAA;AAAA,YAAI,KAAKF,CAAT,EAAY,WAAWC,IAAIM,KAA3B;AAAmCN,cAAIK;AAAvC,SADK,GAEHP,IAFJ;AAGD,OAZgB,CAAjB;AAaA,UAAMS,OAAO,KAAKZ,KAAL,CAAWa,OAAX,GACX;AAAA;AAAA;AACE,cAAI,KAAKb,KAAL,CAAWc,EADjB;AAEE,sBAAc,KAAKd,KAAL,CAAWe,QAAX,GAAsB,eAAtB,GAAwC,EAAtD,WAA4D,KAAKf,KAAL,CAAWgB,MAAX,GAAoB,aAApB,GAAoC,EAAhG,WAAsG,KAAKhB,KAAL,CAAWW,KAAX,GAAmB,KAAKX,KAAL,CAAWW,KAA9B,GAAsC,EAA5I;AAFF;AAIGZ;AAJH,OADW,GAQX;AAAA;AAAA;AACE,cAAI,KAAKC,KAAL,CAAWc,EADjB;AAEE,sBAAc,KAAKd,KAAL,CAAWe,QAAX,GAAsB,eAAtB,GAAwC,EAAtD,WAA4D,KAAKf,KAAL,CAAWgB,MAAX,GAAoB,aAApB,GAAoC,EAAhG,WAAsG,KAAKhB,KAAL,CAAWW,KAAX,GAAmB,KAAKX,KAAL,CAAWW,KAA9B,GAAsC,EAA5I;AAFF;AAIGZ;AAJH,OARF;AAeA,aAAOa,IAAP;AACD;;;;EA/BgBK,gBAAMC,S;;AAkCzBpB,KAAKqB,SAAL,GAAiB;AACfL,MAAIM,oBAAUC,MADC;AAEfV,SAAOS,oBAAUC,MAFF;AAGfpB,SAAOmB,oBAAUE,KAHF;AAIfT,WAASO,oBAAUG,IAJJ;AAKfR,YAAUK,oBAAUG,IALL;AAMfP,UAAQI,oBAAUG;AANH,CAAjB;;AASAzB,KAAK0B,YAAL,GAAoB;AAClBvB,SAAO,EADW;AAElBY,WAAS,KAFS;AAGlBE,YAAU,KAHQ;AAIlBC,UAAQ;AAJU,CAApB;;kBAOelB,I","file":"list.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass List extends React.Component {\n  render() {\n    const contents = this.props.items.map((item, i) => {\n      const obj = {};\n      const isElement = Object.keys(item).indexOf('type') >= 0;\n      if (typeof item === 'string') {\n        obj.content = item;\n      } else if (!isElement) {\n        obj.content = item.content;\n        obj.theme = item.theme;\n      }\n      return !isElement ? (\n        <li key={i} className={obj.theme}>{obj.content}</li>\n      ) : item;\n    });\n    const list = this.props.ordered ? (\n      <ol\n        id={this.props.id}\n        className={`${this.props.unstyled ? 'list-unstyled' : ''} ${this.props.inline ? 'list-inline' : ''} ${this.props.theme ? this.props.theme : ''}`}\n      >\n        {contents}\n      </ol>\n    ) : (\n      <ul\n        id={this.props.id}\n        className={`${this.props.unstyled ? 'list-unstyled' : ''} ${this.props.inline ? 'list-inline' : ''} ${this.props.theme ? this.props.theme : ''}`}\n      >\n        {contents}\n      </ul>\n    );\n    return list;\n  }\n}\n\nList.propTypes = {\n  id: PropTypes.string,\n  theme: PropTypes.string,\n  items: PropTypes.array,\n  ordered: PropTypes.bool,\n  unstyled: PropTypes.bool,\n  inline: PropTypes.bool\n};\n\nList.defaultProps = {\n  items: [],\n  ordered: false,\n  unstyled: false,\n  inline: false\n};\n\nexport default List;\n"]}