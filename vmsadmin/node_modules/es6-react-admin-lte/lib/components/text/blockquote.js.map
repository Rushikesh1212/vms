{"version":3,"sources":["../../../src/js/components/text/blockquote.jsx"],"names":["Blockquote","props","pullRight","quoteTheme","quote","sourceTheme","source","citeTheme","cite","React","Component","propTypes","PropTypes","oneOfType","string","element","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,U;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA,UAAY,WAAW,KAAKC,KAAL,CAAWC,SAAX,GAAuB,YAAvB,GAAsC,EAA7D;AACE;AAAA;AAAA,YAAG,WAAW,KAAKD,KAAL,CAAWE,UAAzB;AAAsC,eAAKF,KAAL,CAAWG;AAAjD,SADF;AAEE;AAAA;AAAA,YAAO,WAAW,KAAKH,KAAL,CAAWI,WAA7B;AACG,eAAKJ,KAAL,CAAWK,MADd;AAAA;AAEE;AAAA;AAAA,cAAM,WAAW,KAAKL,KAAL,CAAWM,SAA5B,EAAuC,OAAO,KAAKN,KAAL,CAAWO,IAAzD;AAAgE,iBAAKP,KAAL,CAAWO;AAA3E;AAFF;AAFF,OADF;AASD;;;;EAXsBC,gBAAMC,S;;AAc/BV,WAAWW,SAAX,GAAuB;AACrBP,SAAOQ,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,EAEzBF,oBAAUG,OAFe,CAApB,CADc;AAKrBZ,cAAYS,oBAAUE,MALD;AAMrBR,UAAQM,oBAAUC,SAAV,CAAoB,CAC1BD,oBAAUE,MADgB,EAE1BF,oBAAUG,OAFgB,CAApB,CANa;AAUrBV,eAAaO,oBAAUE,MAVF;AAWrBN,QAAMI,oBAAUC,SAAV,CAAoB,CACxBD,oBAAUE,MADc,EAExBF,oBAAUG,OAFc,CAApB,CAXe;AAerBR,aAAWK,oBAAUE,MAfA;AAgBrBZ,aAAWU,oBAAUI;AAhBA,CAAvB;;AAmBAhB,WAAWiB,YAAX,GAA0B;AACxBb,SAAO,EADiB;AAExBD,cAAY,EAFY;AAGxBG,UAAQ,EAHgB;AAIxBD,eAAa,EAJW;AAKxBG,QAAM,EALkB;AAMxBD,aAAW,EANa;AAOxBL,aAAW;AAPa,CAA1B;;kBAUeF,U","file":"blockquote.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Blockquote extends React.Component {\n  render() {\n    return (\n      <blockquote className={this.props.pullRight ? 'pull-right' : ''}>\n        <p className={this.props.quoteTheme}>{this.props.quote}</p>\n        <small className={this.props.sourceTheme}>\n          {this.props.source}&nbsp;\n          <cite className={this.props.citeTheme} title={this.props.cite}>{this.props.cite}</cite>\n        </small>\n      </blockquote>\n    );\n  }\n}\n\nBlockquote.propTypes = {\n  quote: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  quoteTheme: PropTypes.string,\n  source: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  sourceTheme: PropTypes.string,\n  cite: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  citeTheme: PropTypes.string,\n  pullRight: PropTypes.bool\n};\n\nBlockquote.defaultProps = {\n  quote: '',\n  quoteTheme: '',\n  source: '',\n  sourceTheme: '',\n  cite: '',\n  citeTheme: '',\n  pullRight: false\n};\n\nexport default Blockquote;\n"]}