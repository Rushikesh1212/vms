{"version":3,"sources":["../../../../src/js/components/header-bar/header-messages/header-messages.jsx"],"names":["HeaderMessages","props","state","open","toggleDropdown","bind","e","type","setState","messageList","messages","map","msgDetails","i","title","displayImg","time","content","link","onClick","count","length","clickHandler","React","Component","propTypes","PropTypes","number","array","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,c;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,MAAM,KAAR,EAAb;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AAHiB;AAIlB;;;;mCAEcC,C,EAAG;AAChB,UAAKA,EAAEC,IAAF,KAAW,MAAX,IAAqB,KAAKL,KAAL,CAAWC,IAAjC,IAA0CG,EAAEC,IAAF,KAAW,MAAzD,EAAiE;AAC/D,aAAKC,QAAL,CAAc,EAAEL,MAAM,CAAC,KAAKD,KAAL,CAAWC,IAApB,EAAd;AACD;AACF;;;6BAEQ;AACP,UAAMM,cAAc,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,GAApB,CAAwB,UAACC,UAAD,EAAaC,CAAb,EAAmB;AAC7D,eACE,8BAAC,qBAAD;AACE,eAAKA,CADP;AAEE,iBAAOD,WAAWE,KAFpB;AAGE,sBAAYF,WAAWG,UAHzB;AAIE,gBAAMH,WAAWI,IAJnB;AAKE,mBAASJ,WAAWK,OALtB;AAME,gBAAML,WAAWM,IANnB;AAOE,mBAASN,WAAWO;AAPtB,UADF;AAWD,OAZmB,CAApB;AAaA,aACE;AAAA;AAAA,UAAI,uCAAoC,KAAKjB,KAAL,CAAWC,IAAX,GAAkB,OAAlB,GAA4B,EAAhE,CAAJ,EAA0E,UAAS,GAAnF,EAAuF,QAAQ,KAAKC,cAApG;AACE;AAAA;AAAA,YAAG,WAAU,iBAAb,EAA+B,eAAY,eAA3C,EAA2D,SAAS,KAAKA,cAAzE;AACE,+CAAG,WAAU,kBAAb,GADF;AAEE;AAAA;AAAA,cAAM,WAAU,qBAAhB;AAAuC,iBAAKH,KAAL,CAAWmB,KAAX,IAAoB,KAAKnB,KAAL,CAAWS,QAAX,CAAoBW;AAA/E;AAFF,SADF;AAKE;AAAA;AAAA,YAAI,WAAU,eAAd;AACE;AAAA;AAAA,cAAI,WAAU,QAAd;AAAA;AAAiC,iBAAKpB,KAAL,CAAWmB,KAAX,IAAoB,KAAKnB,KAAL,CAAWS,QAAX,CAAoBW,MAAzE;AAAA;AAAA,WADF;AAEE;AAAA;AAAA;AACE;AAAA;AAAA,gBAAK,WAAU,eAAf;AACE;AAAA;AAAA,kBAAI,WAAU,MAAd;AACGZ;AADH,eADF;AAIE,qDAAK,WAAU,eAAf,GAJF;AAKE,qDAAK,WAAU,gBAAf;AALF;AADF,WAFF;AAWG,eAAKR,KAAL,CAAWqB,YAAX,GACC;AAAA;AAAA,cAAI,WAAU,QAAd;AACE;AAAA;AAAA,gBAAG,SAAS,KAAKrB,KAAL,CAAWqB,YAAvB;AAAA;AAAA;AADF,WADD,GAMG;AAjBN;AALF,OADF;AA2BD;;;;EAtD0BC,gBAAMC,S;;AAyDnCxB,eAAeyB,SAAf,GAA2B;AACzBL,SAAOM,oBAAUC,MADQ;AAEzBjB,YAAUgB,oBAAUE,KAFK;AAGzBN,gBAAcI,oBAAUG;AAHC,CAA3B;;AAMA7B,eAAe8B,YAAf,GAA8B;AAC5BpB,YAAU;AADkB,CAA9B;;kBAIeV,c","file":"header-messages.js","sourcesContent":["import React from 'react';\nimport MessageItem from './message-item.jsx'\nimport PropTypes from 'prop-types';\n\nclass HeaderMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n  }\n\n  toggleDropdown(e) {\n    if ((e.type === 'blur' && this.state.open) || e.type !== 'blur') {\n      this.setState({ open: !this.state.open });\n    }\n  }\n\n  render() {\n    const messageList = this.props.messages.map((msgDetails, i) => {\n      return (\n        <MessageItem\n          key={i}\n          title={msgDetails.title}\n          displayImg={msgDetails.displayImg}\n          time={msgDetails.time}\n          content={msgDetails.content}\n          link={msgDetails.link}\n          onClick={msgDetails.onClick}\n        />\n      );\n    });\n    return (\n      <li className={`dropdown messages-menu${this.state.open ? ' open' : ''}`} tabIndex=\"0\" onBlur={this.toggleDropdown}>\n        <a className=\"dropdown-toggle\" data-toggle=\"dropdown-menu\" onClick={this.toggleDropdown}>\n          <i className=\"fa fa-envelope-o\" />\n          <span className=\"label label-success\">{this.props.count || this.props.messages.length}</span>\n        </a>\n        <ul className=\"dropdown-menu\">\n          <li className=\"header\">You have {this.props.count || this.props.messages.length} messages</li>\n          <li>\n            <div className=\"slimScrollDiv\">\n              <ul className=\"menu\">\n                {messageList}\n              </ul>\n              <div className=\"slimScrollBar\" />\n              <div className=\"slimScrollRail\" />\n            </div>\n          </li>\n          {this.props.clickHandler ? (\n            <li className=\"footer\">\n              <a onClick={this.props.clickHandler}>\n                See All Messages\n              </a>\n            </li>\n          ) : ''}\n        </ul>\n      </li>\n    );\n  }\n}\n\nHeaderMessages.propTypes = {\n  count: PropTypes.number,\n  messages: PropTypes.array,\n  clickHandler: PropTypes.func\n};\n\nHeaderMessages.defaultProps = {\n  messages: []\n};\n\nexport default HeaderMessages;\n"]}