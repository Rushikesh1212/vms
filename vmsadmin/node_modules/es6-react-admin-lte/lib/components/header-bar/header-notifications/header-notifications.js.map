{"version":3,"sources":["../../../../src/js/components/header-bar/header-notifications/header-notifications.jsx"],"names":["HeaderNotifications","props","state","open","toggleDropdown","bind","e","type","setState","notificationList","notifications","map","notificationDetails","i","icon","content","link","onClick","count","length","clickHandler","React","Component","propTypes","PropTypes","number","array","func","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,mB;;;AACJ,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0IACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAEC,MAAM,KAAR,EAAb;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AAHiB;AAIlB;;;;mCAEcC,C,EAAG;AAChB,UAAKA,EAAEC,IAAF,KAAW,MAAX,IAAqB,KAAKL,KAAL,CAAWC,IAAjC,IAA0CG,EAAEC,IAAF,KAAW,MAAzD,EAAiE;AAC/D,aAAKC,QAAL,CAAc,EAAEL,MAAM,CAAC,KAAKD,KAAL,CAAWC,IAApB,EAAd;AACD;AACF;;;6BAEQ;AACP,UAAMM,mBAAmB,KAAKR,KAAL,CAAWS,aAAX,CAAyBC,GAAzB,CAA6B,UAACC,mBAAD,EAAsBC,CAAtB,EAA4B;AAChF,eACE,8BAAC,0BAAD;AACE,eAAKA,CADP;AAEE,gBAAMD,oBAAoBE,IAF5B;AAGE,mBAASF,oBAAoBG,OAH/B;AAIE,gBAAMH,oBAAoBI,IAJ5B;AAKE,mBAASJ,oBAAoBK;AAL/B,UADF;AASD,OAVwB,CAAzB;AAWA,aACE;AAAA;AAAA,UAAI,4CAAyC,KAAKf,KAAL,CAAWC,IAAX,GAAkB,OAAlB,GAA4B,EAArE,CAAJ,EAA+E,UAAS,GAAxF,EAA4F,QAAQ,KAAKC,cAAzG;AACE;AAAA;AAAA,YAAG,WAAU,iBAAb,EAA+B,eAAY,eAA3C,EAA2D,SAAS,KAAKA,cAAzE;AACE,+CAAG,WAAU,cAAb,GADF;AAEE;AAAA;AAAA,cAAM,WAAU,qBAAhB;AACG,iBAAKH,KAAL,CAAWiB,KAAX,IAAoB,KAAKjB,KAAL,CAAWS,aAAX,CAAyBS;AADhD;AAFF,SADF;AAOE;AAAA;AAAA,YAAI,WAAU,eAAd;AACE;AAAA;AAAA,cAAI,WAAU,QAAd;AAAA;AACY,iBAAKlB,KAAL,CAAWiB,KAAX,IAAoB,KAAKjB,KAAL,CAAWS,aAAX,CAAyBS,MADzD;AAAA;AAAA,WADF;AAIE;AAAA;AAAA;AACE;AAAA;AAAA,gBAAK,WAAU,eAAf;AACE;AAAA;AAAA,kBAAI,WAAU,MAAd;AACGV;AADH,eADF;AAIE,qDAAK,WAAU,eAAf,GAJF;AAKE,qDAAK,WAAU,gBAAf;AALF;AADF,WAJF;AAaG,eAAKR,KAAL,CAAWmB,YAAX,GACC;AAAA;AAAA,cAAI,WAAU,QAAd,EAAuB,SAAS,KAAKnB,KAAL,CAAWmB,YAA3C;AACE;AAAA;AAAA;AAAA;AAAA;AADF,WADD,GAIG;AAjBN;AAPF,OADF;AA6BD;;;;EAtD+BC,gBAAMC,S;;AAyDxCtB,oBAAoBuB,SAApB,GAAgC;AAC9BL,SAAOM,oBAAUC,MADa;AAE9Bf,iBAAec,oBAAUE,KAFK;AAG9BN,gBAAcI,oBAAUG;AAHM,CAAhC;;AAMA3B,oBAAoB4B,YAApB,GAAmC;AACjClB,iBAAe;AADkB,CAAnC;;kBAIeV,mB","file":"header-notifications.js","sourcesContent":["import React from 'react';\nimport NotificationItem from './notification-item.jsx';\nimport PropTypes from 'prop-types';\n\nclass HeaderNotifications extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: false };\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n  }\n\n  toggleDropdown(e) {\n    if ((e.type === 'blur' && this.state.open) || e.type !== 'blur') {\n      this.setState({ open: !this.state.open });\n    }\n  }\n\n  render() {\n    const notificationList = this.props.notifications.map((notificationDetails, i) => {\n      return (\n        <NotificationItem\n          key={i}\n          icon={notificationDetails.icon}\n          content={notificationDetails.content}\n          link={notificationDetails.link}\n          onClick={notificationDetails.onClick}\n        />\n      );\n    });\n    return (\n      <li className={`dropdown notifications-menu${this.state.open ? ' open' : ''}`} tabIndex=\"0\" onBlur={this.toggleDropdown}>\n        <a className=\"dropdown-toggle\" data-toggle=\"dropdown-menu\" onClick={this.toggleDropdown}>\n          <i className=\"fa fa-bell-o\" />\n          <span className=\"label label-warning\">\n            {this.props.count || this.props.notifications.length}\n          </span>\n        </a>\n        <ul className=\"dropdown-menu\">\n          <li className=\"header\">\n            You have {this.props.count || this.props.notifications.length} notifications\n          </li>\n          <li>\n            <div className=\"slimScrollDiv\">\n              <ul className=\"menu\">\n                {notificationList}\n              </ul>\n              <div className=\"slimScrollBar\" />\n              <div className=\"slimScrollRail\" />\n            </div>\n          </li>\n          {this.props.clickHandler ? (\n            <li className=\"footer\" onClick={this.props.clickHandler}>\n              <a>View all</a>\n            </li>\n          ) : ''}\n        </ul>\n      </li>\n    );\n  }\n}\n\nHeaderNotifications.propTypes = {\n  count: PropTypes.number,\n  notifications: PropTypes.array,\n  clickHandler: PropTypes.func\n};\n\nHeaderNotifications.defaultProps = {\n  notifications: []\n};\n\nexport default HeaderNotifications;\n"]}