{"version":3,"sources":["../../../src/js/components/nav-sidebar/nav-sidebar.jsx"],"names":["NavSidebar","props","getBetterChildren","bind","children","React","Children","map","child","i","type","NavSidebarUserPanel","cloneElement","passErr","key","betterChildren","lightTheme","Component","propTypes","PropTypes","string","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAEjB,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,OAAzB;AAFiB;AAGlB;;;;wCACmB;AAAA;;AAClB,UAAI,KAAKF,KAAL,CAAWG,QAAf,EAAyB;AACvB,eAAOC,gBAAMC,QAAN,CAAeC,GAAf,CAAmB,KAAKN,KAAL,CAAWG,QAA9B,EAAwC,UAACI,KAAD,EAAQC,CAAR,EAAc;AAC3D,cAAID,MAAME,IAAN,KAAeC,6BAAnB,EAAwC;AACtC,mBAAON,gBAAMO,YAAN,CAAmBJ,KAAnB,EAA0B,EAAEK,SAAS,OAAKZ,KAAL,CAAWY,OAAtB,EAA+BC,KAAKL,CAApC,EAA1B,CAAP;AACD,WAFD,MAEO;AACL,mBAAOJ,gBAAMO,YAAN,CAAmBJ,KAAnB,EAA0B,EAAEM,KAAKL,CAAP,EAA1B,CAAP;AACD;AACF,SANM,CAAP;AAOD;AACF;;;6BACQ;AACP,UAAMM,iBAAiB,KAAKb,iBAAL,EAAvB;AACA,aACE;AAAA;AAAA,UAAO,6BAA0B,KAAKD,KAAL,CAAWe,UAAX,GAAwB,qBAAxB,GAAgD,EAA1E,CAAP;AACE;AAAA;AAAA,YAAS,WAAU,SAAnB;AACGD;AADH;AADF,OADF;AAOD;;;;EAzBsBV,gBAAMY,S;;AA4B/BjB,WAAWkB,SAAX,GAAuB;AACrBL,WAASM,oBAAUC,MADE;AAErBJ,cAAYG,oBAAUE;AAFD,CAAvB;;AAKArB,WAAWsB,YAAX,GAA0B;AACxBN,cAAY;AADY,CAA1B;;kBAKehB,U","file":"nav-sidebar.js","sourcesContent":["import React from 'react';\nimport NavSidebarUserPanel from './nav-sidebar-user-panel.jsx';\nimport PropTypes from 'prop-types';\n\nclass NavSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getBetterChildren = this.getBetterChildren.bind(this);\n  }\n  getBetterChildren() {\n    if (this.props.children) {\n      return React.Children.map(this.props.children, (child, i) => {\n        if (child.type === NavSidebarUserPanel) {\n          return React.cloneElement(child, { passErr: this.props.passErr, key: i });\n        } else {\n          return React.cloneElement(child, { key: i });\n        }\n      });\n    }\n  }\n  render() {\n    const betterChildren = this.getBetterChildren();\n    return (\n      <aside className={`main-sidebar${this.props.lightTheme ? ' main-sidebar-light' : ''}`}>\n        <section className=\"sidebar\">\n          {betterChildren}\n        </section>\n      </aside>\n    );\n  }\n}\n\nNavSidebar.propTypes = {\n  passErr: PropTypes.string,\n  lightTheme: PropTypes.bool\n};\n\nNavSidebar.defaultProps = {\n  lightTheme: false\n};\n\n\nexport default NavSidebar;\n"]}