{"version":3,"sources":["../../../src/js/components/nav-sidebar/nav-sidebar-menu-item.jsx"],"names":["NavSidebarMenuItem","props","state","classes","checkHeaderType","bind","generateContent","dropHandler","multiViewer","isHeader","heading","labels","length","link","icon","classType","header","content","push","children","e","thisList","ReactDOM","findDOMNode","tabButton","target","className","indexOf","classList","remove","add","slideDown","slideUp","clickHandler","onClick","join","React","Component","propTypes","PropTypes","string","bool","func","array","defaultProps"],"mappings":"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","file":"nav-sidebar-menu-item.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\n\nclass NavSidebarMenuItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { classes: '' };\n    this.checkHeaderType = this.checkHeaderType.bind(this);\n    this.generateContent = this.generateContent.bind(this);\n    this.dropHandler = this.dropHandler.bind(this);\n  }\n\n  checkHeaderType(multiViewer = '') {\n    if (this.props.isHeader) {\n      return (\n        <div>\n          <span>{this.props.heading}</span>\n          {multiViewer || this.props.labels.length <= 0 ? '' : (\n            <span className=\"pull-right-container\">\n              {this.props.labels}\n            </span>\n          )}\n          {multiViewer}\n        </div>\n      );\n    }\n    return (\n      <a href={this.props.link} >\n        <i className={`fa ${this.props.icon} text-center`} />\n        &nbsp;\n        <span>{this.props.heading}</span>\n        {multiViewer || this.props.labels.length <= 0 ? '' : (\n          <span className=\"pull-right-container\">\n            {this.props.labels}\n          </span>\n        )}\n        {multiViewer}\n      </a>\n    );\n  }\n\n  generateContent() {\n    const classType = [];\n    let header = '';\n    let content = '';\n    if (this.props.isHeader) {\n      classType.push('header');\n    }\n    if (this.props.children) {\n      classType.push('treeview');\n      const multiViewer = (\n        <span className=\"pull-right-container\">\n          <i className=\"fa fa-angle-left pull-right\"></i>\n        </span>\n      );\n      header = this.checkHeaderType(multiViewer);\n      content = (\n        <ul className=\"treeview-menu\">\n          {this.props.children}\n        </ul>\n      );\n    } else {\n      header = this.checkHeaderType();\n    }\n    return {\n      header: header,\n      content: content,\n      classType: classType\n    };\n  }\n\n  dropHandler(e) {\n    const thisList = ReactDOM.findDOMNode(this);\n    const tabButton = thisList.children[0].children[thisList.children[0].children.length - 1].children[0];\n    if ((e.target === thisList.children[0]) || (e.target === thisList.children[0].children[thisList.children[0].children.length - 1].children[0])) {\n      //  If what the user clicks is the same as the drop-down list item's header area, or it's first child's last child's child (the drop-down icon)\n      if (thisList.className.indexOf('active') === -1) {\n        tabButton.classList.remove('fa-angle-left');\n        tabButton.classList.add('fa-angle-down');\n        $(thisList.children[1]).slideDown(500, 'swing', () => {\n            thisList.classList.add('active');\n            thisList.children[1].classList.add('menu-open');\n          }\n        );\n      } else {\n        tabButton.classList.remove('fa-angle-down');\n        tabButton.classList.add('fa-angle-left');\n        $(thisList.children[1]).slideUp(500, 'swing', () => {\n            thisList.classList.remove('active');\n            thisList.children[1].classList.remove('menu-open');\n          }\n        );\n      }\n    }\n  }\n\n  render() {\n    const content = this.generateContent();\n    const clickHandler = this.props.children ? this.dropHandler : this.props.onClick;\n    return (\n      <li className={content.classType.join(' ')} onClick={clickHandler}>\n        {content.header}\n        {content.content}\n      </li>\n    );\n  }\n}\n\nNavSidebarMenuItem.propTypes = {\n  heading: PropTypes.string,\n  link: PropTypes.string,\n  icon: PropTypes.string,\n  isHeader: PropTypes.bool,\n  onClick: PropTypes.func,\n  labels: PropTypes.array\n};\n\nNavSidebarMenuItem.defaultProps = {\n  heading: '',\n  isHeader: false,\n  icon: '',\n  onClick: () => {},\n  labels: []\n};\n\nexport default NavSidebarMenuItem;\n"]}