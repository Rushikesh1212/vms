{"version":3,"sources":["../../../../src/js/components/form/pieces/date-picker.jsx"],"names":["DatePickerator","props","id","datepicker","autoclose","format","orientation","todayHighlight","defaultDate","value","Date","now","forceParse","on","onChange","e","disabled","placeholder","required","backgroundColor","React","Component","propTypes","PropTypes","string","func","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,c;;;;;;;;;;;wCACgB;AAAA;;AAClB,iDAAqB,KAAKC,KAAL,CAAWC,EAAhC,EAAsCC,UAAtC,CAAiD;AAC/CC,mBAAW,IADoC;AAE/CC,gBAAQ,KAAKJ,KAAL,CAAWI,MAF4B;AAG/CC,qBAAa,cAHkC;AAI/CC,wBAAgB,IAJ+B;AAK/CC,qBAAa,KAAKP,KAAL,CAAWQ,KAAX,IAAoBC,KAAKC,GAAL,EALc;AAM/CC,oBAAY;AANmC,OAAjD,EAOGC,EAPH,CAOM,YAPN,EAOoB,aAAK;AACvB,eAAKZ,KAAL,CAAWa,QAAX,CAAoBC,CAApB;AACD,OATD;AAUD;;;6BAEQ;AACP,aACE;AAAA;AAAA,UAAK,WAAU,6BAAf;AACE;AACE,0BAAa,YADf;AAEE,gBAAK,MAFP;AAGE,qBAAU,yBAHZ;AAIE,kCAAsB,KAAKd,KAAL,CAAWC,EAJnC;AAKE,oCAAwB,KAAKD,KAAL,CAAWC,EALrC;AAME,oBAAW,CAAC,KAAKD,KAAL,CAAWe,QAAZ,IAAwB,KAAKf,KAAL,CAAWa,QAApC,GAAgD,KAAKb,KAAL,CAAWa,QAA3D,GAAsE,YAAM,CAAE,CAN1F;AAOE,uBAAa,KAAKb,KAAL,CAAWgB,WAP1B;AAQE,iBAAO,KAAKhB,KAAL,CAAWQ,KARpB;AASE,oBAAU,KAAKR,KAAL,CAAWiB,QATvB;AAUE,iBAAO,CAAC,KAAKjB,KAAL,CAAWe,QAAZ,GAAuB,EAAEG,iBAAiB,SAAnB,EAAvB,GAAwD,EAVjE;AAWE,wBAXF;AAYE,oBAAU,KAAKlB,KAAL,CAAWe;AAZvB;AADF,OADF;AAkBD;;;;EAjC0BI,gBAAMC,S;;AAoCnCrB,eAAesB,SAAf,GAA2B;AACzBpB,MAAIqB,oBAAUC,MADW;AAEzBf,SAAOc,oBAAUC,MAFQ;AAGzBV,YAAUS,oBAAUE,IAHK;AAIzBP,YAAUK,oBAAUG,IAJK;AAKzBV,YAAUO,oBAAUG,IALK;AAMzBrB,UAAQkB,oBAAUC,MANO;AAOzBP,eAAaM,oBAAUC;AAPE,CAA3B;AASAxB,eAAe2B,YAAf,GAA8B;AAC5BT,YAAU,KADkB;AAE5Bb,UAAQ,cAFoB;AAG5BY,eAAa;AAHe,CAA9B;;kBAMejB,c","file":"date-picker.js","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport DatePicker from 'bootstrap-datepicker';\nimport PropTypes from 'prop-types';\n\nclass DatePickerator extends React.Component {\n  componentDidMount() {\n    $(`#datepickerator-${this.props.id}`).datepicker({\n      autoclose: true,\n      format: this.props.format,\n      orientation: 'bottom right',\n      todayHighlight: true,\n      defaultDate: this.props.value || Date.now(),\n      forceParse: true\n    }).on('changeDate', e => {\n      this.props.onChange(e);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"date datepicker-input-group\">\n        <input\n          data-provide=\"datepicker\"\n          type=\"text\"\n          className=\"form-control datepicker\"\n          id={`datepickerator-${this.props.id}`}\n          name={`datepickerator-${this.props.id}`}\n          onChange={(!this.props.disabled && this.props.onChange) ? this.props.onChange : () => {}}\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          required={this.props.required}\n          style={!this.props.disabled ? { backgroundColor: '#FFFFFF' } : {}}\n          readOnly\n          disabled={this.props.disabled}\n        />\n      </div>\n    );\n  }\n}\n\nDatePickerator.propTypes = {\n  id: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  format: PropTypes.string,\n  placeholder: PropTypes.string\n};\nDatePickerator.defaultProps = {\n  required: false,\n  format: 'MM, dd, yyyy',\n  placeholder: 'Month, Day, Year'\n};\n\nexport default DatePickerator;\n"]}