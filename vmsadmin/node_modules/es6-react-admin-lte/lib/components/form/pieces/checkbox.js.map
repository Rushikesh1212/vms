{"version":3,"sources":["../../../../src/js/components/form/pieces/checkbox.jsx"],"names":["Checkbox","props","containerClass","labelClass","id","checkClass","disabled","onChange","value","checked","required","textClass","label","React","Component","propTypes","PropTypes","string","isRequired","oneOfType","number","bool","func","element","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,Q;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA,UAAK,yBAAuB,KAAKC,KAAL,CAAWC,cAAvC;AACE;AAAA;AAAA;AACE,4CAA8B,KAAKD,KAAL,CAAWE,UAD3C;AAEE,qBAAS,KAAKF,KAAL,CAAWG;AAFtB;AAIE;AACE,kBAAK,UADP;AAEE,iDAAmC,KAAKH,KAAL,CAAWI,UAFhD;AAGE,gBAAI,KAAKJ,KAAL,CAAWG,EAHjB;AAIE,kBAAM,KAAKH,KAAL,CAAWG,EAJnB;AAKE,sBAAW,CAAC,KAAKH,KAAL,CAAWK,QAAZ,IAAwB,KAAKL,KAAL,CAAWM,QAApC,GAAgD,KAAKN,KAAL,CAAWM,QAA3D,GAAsE,YAAM,CAAE,CAL1F;AAME,mBAAO,KAAKN,KAAL,CAAWO,KANpB;AAOE,qBAAS,KAAKP,KAAL,CAAWQ,OAPtB;AAQE,sBAAU,KAAKR,KAAL,CAAWS,QARvB;AASE,sBAAU,KAAKT,KAAL,CAAWK;AATvB,YAJF;AAeE,kDAAM,qCAAN,GAfF;AAgBE;AAAA;AAAA,cAAM,2CAAyC,KAAKL,KAAL,CAAWU,SAA1D;AAAwE,iBAAKV,KAAL,CAAWW;AAAnF;AAhBF;AADF,OADF;AAsBD;;;;EAxBoBC,gBAAMC,S;;AA2B7Bd,SAASe,SAAT,GAAqB;AACnBb,kBAAgBc,oBAAUC,MADP;AAEnBZ,cAAYW,oBAAUC,MAFH;AAGnBb,MAAIY,oBAAUC,MAAV,CAAiBC,UAHF;AAInBV,SAAOQ,oBAAUG,SAAV,CAAoB,CACzBH,oBAAUC,MADe,EAEzBD,oBAAUI,MAFe,EAGzBJ,oBAAUK,IAHe,CAApB,CAJY;AASnBZ,WAASO,oBAAUK,IATA;AAUnBd,YAAUS,oBAAUM,IAVD;AAWnBZ,YAAUM,oBAAUK,IAXD;AAYnBf,YAAUU,oBAAUK,IAZD;AAanBT,SAAOI,oBAAUG,SAAV,CAAoB,CACzBH,oBAAUC,MADe,EAEzBD,oBAAUO,OAFe,CAApB,CAbY;AAiBnBpB,cAAYa,oBAAUC,MAjBH;AAkBnBN,aAAWK,oBAAUC;AAlBF,CAArB;AAoBAjB,SAASwB,YAAT,GAAwB;AACtBtB,kBAAgB,EADM;AAEtBG,cAAY,EAFU;AAGtBK,YAAU,KAHY;AAItBD,WAAS,KAJa;AAKtBG,SAAO,EALe;AAMtBT,cAAY,EANU;AAOtBQ,aAAW;AAPW,CAAxB;;kBAUeX,Q","file":"checkbox.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkbox extends React.Component {\n  render() {\n    return (\n      <div className={`checkbox ${this.props.containerClass}`}>\n        <label\n          className={`custom-checkbox ${this.props.labelClass}`}\n          htmlFor={this.props.id}\n        >\n          <input\n            type=\"checkbox\"\n            className={`custom-control-input ${this.props.checkClass}`}\n            id={this.props.id}\n            name={this.props.id}\n            onChange={(!this.props.disabled && this.props.onChange) ? this.props.onChange : () => {}}\n            value={this.props.value}\n            checked={this.props.checked}\n            required={this.props.required}\n            disabled={this.props.disabled}\n          />\n          <span className={`custom-control-indicator`} />\n          <span className={`custom-control-description ${this.props.textClass}`}>{this.props.label}</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  containerClass: PropTypes.string,\n  checkClass: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool\n  ]),\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  label: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  labelClass: PropTypes.string,\n  textClass: PropTypes.string\n};\nCheckbox.defaultProps = {\n  containerClass: '',\n  checkClass: '',\n  required: false,\n  checked: false,\n  label: '',\n  labelClass: '',\n  textClass: ''\n};\n\nexport default Checkbox;\n"]}