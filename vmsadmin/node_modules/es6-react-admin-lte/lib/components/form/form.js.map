{"version":3,"sources":["../../../src/js/components/form/form.jsx"],"names":["Form","props","state","data","loadForm","bind","changeHandler","clickHandler","convertToDataType","nextProps","setState","fields","map","field","i","required","disabled","fieldVal","id","replace","fieldElement","type","undefined","Number","placeholder","min","marginLeft","options","error","loading","name","Boolean","valueProperty","displayProperty","val","moment","unix","format","confirms","hidden","clear","color","toType","JSON","parse","stringify","e","preventDefault","submitData","length","indexOf","requiredErrs","filter","reqfield","confirmErrs","matchesCounterpart","shouldMatch","find","dp","Object","prototype","hasOwnProperty","call","dataType","validate","formData","value","currentTarget","checked","valueOf","fieldId","fieldDetails","isString","isNum","isNaN","isBool","children","moreButtons","hideMainButton","submitTheme","margin","submitIcon","submitHeader","React","Component","propTypes","PropTypes","bool","string","array","object","func","oneOfType","element","defaultProps"],"mappings":"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","file":"form.js","sourcesContent":["import React from 'react';\nimport LoadStatus from '../utilities/load-status.jsx';\nimport Select from './pieces/select.jsx';\nimport DatePicker from './pieces/date-picker.jsx';\nimport PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data\n    };\n    this.loadForm = this.loadForm.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.convertToDataType = this.convertToDataType.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      data: nextProps.data\n    });\n  }\n\n  loadForm() {\n    return this.props.fields.map((field, i) => {\n      const required = field.required || false;\n      const disabled = field.disabled || false;\n      const fieldVal = this.state.data && this.state.data[field.id.replace(/-/g, '_')] !== null ? this.state.data[field.id.replace(/-/g, '_')] : '';\n      let fieldElement;\n      switch (field.type) {\n        case ('uncertain-radio'):\n          fieldElement = (\n            <div id={field.id} className=\"row\">\n              <div className=\"col-xs-4 col-sm-3\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name={field.id}\n                  value={0}\n                  checked={fieldVal !== null && fieldVal !== undefined ? Number(fieldVal) === 0 : true}\n                  onChange={this.changeHandler}\n                  required={required}\n                  disabled={field.disabled}\n                />\n                &nbsp;Undecided\n              </div>\n              <div className=\"col-xs-4 col-sm-3 col-md-2\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name={field.id}\n                  value={1}\n                  checked={Number(fieldVal) === 1}\n                  onChange={this.changeHandler}\n                  required={required}\n                  disabled={field.disabled}\n                />\n                &nbsp;Yes\n              </div>\n              <div className=\"col-xs-4 col-sm-3 col-md-2\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name={field.id}\n                  value={-1}\n                  checked={Number(fieldVal) === -1}\n                  onChange={this.changeHandler}\n                  required={required}\n                  disabled={field.disabled}\n                />\n                &nbsp;No\n              </div>\n            </div>\n          );\n          break;\n        case ('certain-radio'):\n          fieldElement = (\n            <div id={field.id} className=\"row\">\n              <div className=\"col-xs-4 col-sm-3 col-md-2\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name={field.id}\n                  value={1}\n                  checked={Number(fieldVal) === 1}\n                  onChange={this.changeHandler}\n                  required={required}\n                  disabled={field.disabled}\n                />\n                &nbsp;Yes\n              </div>\n              <div className=\"col-xs-4 col-sm-3 col-md-2\">\n                <input\n                  type=\"radio\"\n                  className=\"form-check-input\"\n                  name={field.id}\n                  value={0}\n                  checked={fieldVal !== null && fieldVal !== undefined ? Number(fieldVal) === 0 : true}\n                  onChange={this.changeHandler}\n                  required={required}\n                  disabled={field.disabled}\n                />\n                &nbsp;No\n              </div>\n            </div>\n          );\n          break;\n        case ('textarea'):\n          fieldElement = (\n            <textarea\n              className=\"form-control\"\n              id={field.id}\n              name={field.id}\n              onChange={this.changeHandler}\n              required={required}\n              value={fieldVal}\n              placeholder={field.placeholder || null}\n              disabled={field.disabled}\n            />\n          );\n          break;\n        case ('number'):\n          fieldElement = (\n            <input\n              className=\"form-control\"\n              type={field.type}\n              id={field.id}\n              name={field.id}\n              value={fieldVal}\n              onChange={this.changeHandler}\n              required={required}\n              min={field.min || 0}\n              placeholder={field.placeholder || null}\n              disabled={field.disabled}\n            />\n          );\n          break;\n        case ('checkbox'):\n          fieldElement = (\n            <input\n              className=\"form-check-input\"\n              style={{ marginLeft: '1em' }}\n              type={field.type}\n              id={field.id}\n              name={field.id}\n              checked={fieldVal}\n              onChange={this.changeHandler}\n              required={required}\n              min={field.min || 0}\n              disabled={field.disabled}\n            />\n          );\n          break;\n        case ('dropdown'):\n          fieldElement = (\n            <Select\n              id={field.id}\n              options={field.options}\n              error={field.error}\n              loading={field.loading}\n              emptyValue={field.name}\n              value={Boolean(fieldVal) ? fieldVal : field.name}\n              onChange={this.changeHandler}\n              required={required}\n              disabled={disabled}\n              valueProperty={field.valueProperty}\n              displayProperty={field.displayProperty}\n            />\n          );\n          break;\n        case ('date'):\n          const val = fieldVal ? moment.unix(fieldVal).format('MMMM, DD, YYYY') : '';\n          fieldElement = (\n            <DatePicker\n              id={field.id}\n              onChange={this.changeHandler}\n              value={val}\n              required={required}\n              disabled={disabled}\n            />\n          );\n          break;\n        default:\n          fieldElement = (\n            <input\n              className=\"form-control\"\n              type={field.type}\n              id={field.id}\n              name={field.id}\n              value={fieldVal}\n              onChange={this.changeHandler}\n              required={required}\n              placeholder={field.placeholder || null}\n              data-confirms={field.confirms || null}\n              disabled={field.disabled}\n            />\n          );\n          break;\n      }\n      return (\n        <div\n          className={`form-group${field.hidden ? ' hidden' : ''}`}\n          key={i}\n          style={{ clear: 'both' }}\n        >\n          <label htmlFor={field.id} style={{ color: '#848484' }}>{field.name}</label>\n          {fieldElement}\n        </div>\n      );\n    });\n  }\n\n  convertToDataType(data, toType) {\n    switch (toType) {\n      case ('number'): return Number(data);\n      case ('boolean'): return Boolean(data);\n      case ('binary'): return Boolean(data) === true ? 1 : 0;\n      case ('object'): return typeof data === 'object' ? data : JSON.parse(data);\n      default: return typeof data === 'object' ? JSON.stringify(data) : `${data}`;\n    }\n  }\n\n  clickHandler(e) {\n    e.preventDefault();\n    const submitData = this.state.data;\n    for (let i = 0; i < this.props.fields.length; i++) {\n      if (this.props.fields[i].id.indexOf('ignore-') >= 0) {\n        delete submitData[this.props.fields[i].id.replace(/-/g, '_')];\n      }\n    }\n    const requiredErrs = this.props.fields.filter(field => {\n      return field.required && !submitData[field.id.replace(/-/g, '_')];\n    }).map(reqfield => {\n      return reqfield.name;\n    });\n    const confirmErrs = this.props.fields.filter(field => {\n      const confirms = field.confirms !== null && field.confirms !== undefined && field.confirms !== '';\n      let matchesCounterpart = true;\n      if (confirms) {\n        matchesCounterpart = submitData[field.confirms.replace(/-/g, '_')] === submitData[field.id.replace(/-/g, '_')];\n      }\n      return confirms && !matchesCounterpart;\n    }).map(reqfield => {\n      const shouldMatch = this.props.fields.find(field => {\n        return field.id === reqfield.confirms;\n      });\n      return `'${reqfield.name}' & '${shouldMatch.name}' do not match.`;\n    });\n    for (const dp in submitData) {\n      if (Object.prototype.hasOwnProperty.call(submitData, dp)) {\n        const dataType = this.props.fields.filter(field => {\n          return field.id === dp.replace(/_/g, '-');\n        });\n        if (dataType[0] !== undefined && dataType[0] !== null) {\n          submitData[dp] = submitData[dp] === null || submitData[dp] === undefined || submitData[dp] === '' ? null : this.convertToDataType(submitData[dp], dataType[0].validate ? dataType[0].validate : '');\n        }\n      }\n    }\n    this.props.clickHandler(submitData, requiredErrs, confirmErrs);\n  }\n\n  changeHandler(e) {\n    const formData = this.state.data;\n    let value = e.currentTarget.type !== 'checkbox' ? e.currentTarget.value : e.currentTarget.checked;\n    if (e.currentTarget.id.indexOf('datepickerator-') >= 0) {\n      value = moment(value, 'MMMM, DD, YYYY').valueOf() / 1000;\n    }\n    const fieldId = Boolean(e.currentTarget.id) ? e.currentTarget.id.replace('datepickerator-', '').replace(/-/g, '_') : e.currentTarget.name.replace('datepickerator-', '').replace(/-/g, '_');\n    const fieldDetails = this.props.fields.filter(field => {\n      return field.id === fieldId.replace(/_/g, '-');\n    });\n    const isString = fieldDetails[0].validate === 'string' && typeof value === 'string';\n    const isNum = fieldDetails[0].validate === 'number' && !isNaN(value);\n    const isBool = (fieldDetails[0].validate === 'boolean' || fieldDetails[0].validate === 'binary') && (value === true || value === false || value === 'true' || value === 'false' || value === 0 || value === 1);\n    if (isString || isNum || isBool) {\n      formData[fieldId] = value;\n      this.setState({ data: formData });\n    }\n  }\n\n  render() {\n    //  A field object in the fields prop takes 6 properties (*required):\n    //  *id, name, *type, required, validate\n    //  Otherwise you can place children to fill the form; or both!\n    const fields = this.props.fields ? this.loadForm() : '';\n    return (\n      <form role=\"form\" id={this.props.id} noValidate>\n        <div className=\"box-body\">\n          {!this.props.loading ? (\n            <div>\n              {fields}\n              {this.props.children}\n              <div className=\"text-right\">\n                {this.props.moreButtons}\n                {this.props.hideMainButton ? '' : (\n                  <button\n                    id=\"btn-modder\"\n                    className={`btn ${this.props.submitTheme || 'btn-success'}`}\n                    onClick={this.clickHandler}\n                    style={{ margin: '0 0 0 1em' }}\n                  >\n                    {this.props.submitIcon ? (\n                      <i className={`fa ${this.props.submitIcon}`} />\n                    ) : ''}\n                    {(this.props.submitIcon && this.props.submitHeader) ? (\n                      <span>&nbsp;</span>\n                    ) : ''}\n                    {this.props.submitHeader || 'Submit'}\n                  </button>\n                )}\n              </div>\n            </div>\n          ) : (\n            <div className=\"text-center\">\n              <LoadStatus size=\"3em\" color=\"#848484\" spins />\n            </div>\n          )}\n        </div>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  loading: PropTypes.bool,\n  id: PropTypes.string,\n  fields: PropTypes.array,\n  data: PropTypes.object,\n  clickHandler: PropTypes.func,\n  submitIcon: PropTypes.string,\n  submitHeader: PropTypes.string,\n  submitTheme: PropTypes.string,\n  hideMainButton: PropTypes.bool,\n  moreButtons: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.element\n  ])\n};\nForm.defaultProps = {\n  hideMainButton: false\n};\n\nexport default Form;\n"]}