{"version":3,"sources":["../../../src/js/components/info-tile/info-tile.jsx"],"names":["InfoTile","xs","props","widthXS","width","sm","widthSM","md","widthMD","lg","widthLG","xl","widthXL","percent","theme","icon","subject","stats","progressTheme","content","React","Component","propTypes","PropTypes","oneOfType","number","string","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,Q;;;;;;;;;;;6BACK;AACP,UAAMC,KAAK,KAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWE,KAA5C;AACA,UAAMC,KAAK,KAAKH,KAAL,CAAWI,OAAX,IAAsBL,EAAjC;AACA,UAAMM,KAAK,KAAKL,KAAL,CAAWM,OAAX,IAAsBH,EAAjC;AACA,UAAMI,KAAK,KAAKP,KAAL,CAAWQ,OAAX,IAAsBH,EAAjC;AACA,UAAMI,KAAK,KAAKT,KAAL,CAAWU,OAAX,IAAsBH,EAAjC;AACA,aACE;AAAA;AAAA,UAAK,uBAAqBR,EAArB,gBAAkCI,EAAlC,gBAA+CE,EAA/C,gBAA4DE,EAA5D,gBAAyEE,EAA9E;AACE;AAAA;AAAA,YAAK,yBAAsB,KAAKT,KAAL,CAAWW,OAAX,SAAyB,KAAKX,KAAL,CAAWY,KAApC,GAA8C,EAApE,CAAL;AACE;AAAA;AAAA,cAAM,8BAA2B,KAAKZ,KAAL,CAAWW,OAAX,GAAqB,EAArB,SAA8B,KAAKX,KAAL,CAAWY,KAApE,CAAN;AACE,iDAAG,mBAAiB,KAAKZ,KAAL,CAAWa,IAA/B;AADF,WADF;AAIE;AAAA;AAAA,cAAK,WAAU,kBAAf;AACE;AAAA;AAAA,gBAAM,WAAU,eAAhB;AAAiC,mBAAKb,KAAL,CAAWc;AAA5C,aADF;AAEE;AAAA;AAAA,gBAAM,WAAU,iBAAhB;AAAmC,mBAAKd,KAAL,CAAWe;AAA9C,aAFF;AAGG,iBAAKf,KAAL,CAAWW,OAAX,GACC;AAAA;AAAA;AACE;AAAA;AAAA,kBAAK,WAAU,UAAf;AACE;AACE,+CAA2B,KAAKX,KAAL,CAAWgB,aADxC;AAEE,yBAAO,EAAEd,OAAU,KAAKF,KAAL,CAAWW,OAArB,MAAF;AAFT;AADF,eADF;AAOE;AAAA;AAAA,kBAAM,WAAU,sBAAhB;AACG,qBAAKX,KAAL,CAAWiB;AADd;AAPF,aADD,GAYG,KAAKjB,KAAL,CAAWiB;AAfjB;AAJF;AADF,OADF;AA0BD;;;;EAjCoBC,gBAAMC,S;;AAmC7BrB,SAASsB,SAAT,GAAqB;AACnBlB,SAAOmB,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,EAEzBF,oBAAUG,MAFe,CAApB,CADY;AAKnBvB,WAASoB,oBAAUC,SAAV,CAAoB,CAC3BD,oBAAUE,MADiB,EAE3BF,oBAAUG,MAFiB,CAApB,CALU;AASnBpB,WAASiB,oBAAUC,SAAV,CAAoB,CAC3BD,oBAAUE,MADiB,EAE3BF,oBAAUG,MAFiB,CAApB,CATU;AAanBlB,WAASe,oBAAUC,SAAV,CAAoB,CAC3BD,oBAAUE,MADiB,EAE3BF,oBAAUG,MAFiB,CAApB,CAbU;AAiBnBhB,WAASa,oBAAUC,SAAV,CAAoB,CAC3BD,oBAAUE,MADiB,EAE3BF,oBAAUG,MAFiB,CAApB,CAjBU;AAqBnBd,WAASW,oBAAUC,SAAV,CAAoB,CAC3BD,oBAAUE,MADiB,EAE3BF,oBAAUG,MAFiB,CAApB,CArBU;AAyBnBX,QAAMQ,oBAAUG,MAzBG;AA0BnBT,SAAOM,oBAAUC,SAAV,CAAoB,CACzBD,oBAAUE,MADe,EAEzBF,oBAAUG,MAFe,CAApB,CA1BY;AA8BnBb,WAASU,oBAAUE,MA9BA;AA+BnBN,WAASI,oBAAUG,MA/BA;AAgCnBV,WAASO,oBAAUG,MAhCA;AAiCnBZ,SAAOS,oBAAUG,MAjCE;AAkCnBR,iBAAeK,oBAAUG;AAlCN,CAArB;AAoCA1B,SAAS2B,YAAT,GAAwB;AACtBvB,SAAO,EADe;AAEtBe,WAAS,EAFa;AAGtBJ,QAAM,WAHgB;AAItBE,SAAO,CAJe;AAKtBD,WAAS,EALa;AAMtBF,SAAO,WANe;AAOtBI,iBAAe;AAPO,CAAxB;;kBAUelB,Q","file":"info-tile.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InfoTile extends React.Component {\n  render() {\n    const xs = this.props.widthXS || this.props.width;\n    const sm = this.props.widthSM || xs;\n    const md = this.props.widthMD || sm;\n    const lg = this.props.widthLG || md;\n    const xl = this.props.widthXL || lg;\n    return (\n      <div className={`col-xs-${xs} col-sm-${sm} col-md-${md} col-lg-${lg} col-xl-${xl}`}>\n        <div className={`info-box${this.props.percent ? ` ${this.props.theme}` : ''}`}>\n          <span className={`info-box-icon${this.props.percent ? '' : ` ${this.props.theme}`}`}>\n            <i className={`fa ${this.props.icon}`} />\n          </span>\n          <div className=\"info-box-content\">\n            <span className=\"info-box-text\">{this.props.subject}</span>\n            <span className=\"info-box-number\">{this.props.stats}</span>\n            {this.props.percent ? (\n              <div>\n                <div className=\"progress\">\n                  <div\n                    className={`progress-bar ${this.props.progressTheme}`}\n                    style={{ width: `${this.props.percent}%` }}\n                  />\n                </div>\n                <span className=\"progress-description\">\n                  {this.props.content}\n                </span>\n              </div>\n            ) : this.props.content}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nInfoTile.propTypes = {\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  widthXS: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  widthSM: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  widthMD: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  widthLG: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  widthXL: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  icon: PropTypes.string,\n  stats: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  percent: PropTypes.number,\n  content: PropTypes.string,\n  subject: PropTypes.string,\n  theme: PropTypes.string,\n  progressTheme: PropTypes.string\n};\nInfoTile.defaultProps = {\n  width: 12,\n  content: '',\n  icon: 'fa-star-o',\n  stats: 0,\n  subject: '',\n  theme: 'bg-yellow',\n  progressTheme: 'bg-white'\n};\n\nexport default InfoTile;\n"]}