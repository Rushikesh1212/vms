{"version":3,"sources":["../../../src/js/components/timeline/timeline.jsx"],"names":["Timeline","timelineInfo","props","children","map","timelineElement","indx","endDate","push","items","forEach","item","i","icon","iconTheme","time","header","body","footer","startDate","React","Component","propTypes","PropTypes","array","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,Q;;;;;;;;;;;6BACK;AACP,UAAIC,eAAe,EAAnB;AACA,UAAI,KAAKC,KAAL,CAAWC,QAAf,EAAyB;AACvBF,uBAAe,KAAKC,KAAL,CAAWC,QAA1B;AACD,OAFD,MAEO;AACL,aAAKD,KAAL,CAAWD,YAAX,CAAwBG,GAAxB,CAA4B,UAACC,eAAD,EAAkBC,IAAlB,EAA2B;AACrD,cAAID,gBAAgBE,OAApB,EAA6B;AAC3BN,yBAAaO,IAAb,CAAkB,8BAAC,uBAAD,IAAW,gBAAcF,IAAzB,EAAiC,OAAM,QAAvC,EAAgD,SAASD,gBAAgBE,OAAzE,GAAlB;AACD;AACDF,0BAAgBI,KAAhB,CAAsBC,OAAtB,CAA8B,UAACC,IAAD,EAAOC,CAAP,EAAa;AACzCX,yBAAaO,IAAb,CAAkB,8BAAC,sBAAD,IAAc,cAAYF,IAAZ,GAAmBM,CAAjC,EAAsC,MAAMD,KAAKE,IAAjD,EAAuD,WAAWF,KAAKG,SAAvE,EAAkF,MAAMH,KAAKI,IAA7F,EAAmG,QAAQJ,KAAKK,MAAhH,EAAwH,MAAML,KAAKM,IAAnI,EAAyI,QAAQN,KAAKO,MAAtJ,GAAlB;AACD,WAFD;AAGA,cAAIb,gBAAgBc,SAApB,EAA+B;AAC7BlB,yBAAaO,IAAb,CAAkB,8BAAC,uBAAD,IAAW,gBAAcF,IAAzB,EAAiC,OAAM,UAAvC,EAAkD,SAASD,gBAAgBc,SAA3E,GAAlB;AACD;AACF,SAVD;AAWD;AACD,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA,YAAI,WAAU,UAAd;AACGlB,sBADH;AAEE;AAAA;AAAA;AAAI,iDAAG,WAAU,uBAAb;AAAJ;AAFF;AADF,OADF;AAQD;;;;EA1BoBmB,gBAAMC,S;;AA4B7BrB,SAASsB,SAAT,GAAqB;AACnBrB,gBAAcsB,oBAAUC;AADL,CAArB;AAGAxB,SAASyB,YAAT,GAAwB;AACtBxB,gBAAc;AADQ,CAAxB;;kBAIeD,Q","file":"timeline.js","sourcesContent":["import React from 'react';\nimport TimeLabel from './timeline-label.jsx';\nimport TimelineItem from './timeline-item/timeline-item.jsx';\nimport PropTypes from 'prop-types';\n\nclass Timeline extends React.Component {\n  render() {\n    let timelineInfo = [];\n    if (this.props.children) {\n      timelineInfo = this.props.children;\n    } else {\n      this.props.timelineInfo.map((timelineElement, indx) => {\n        if (timelineElement.endDate) {\n          timelineInfo.push(<TimeLabel key={`label1${indx}`} theme=\"bg-red\" content={timelineElement.endDate} />);\n        }\n        timelineElement.items.forEach((item, i) => {\n          timelineInfo.push(<TimelineItem key={`item${indx}${i}`} icon={item.icon} iconTheme={item.iconTheme} time={item.time} header={item.header} body={item.body} footer={item.footer} />);\n        });\n        if (timelineElement.startDate) {\n          timelineInfo.push(<TimeLabel key={`label2${indx}`} theme=\"bg-green\" content={timelineElement.startDate} />);\n        }\n      });\n    }\n    return (\n      <div className=\"col-md-12\">\n        <ul className=\"timeline\">\n          {timelineInfo}\n          <li><i className=\"fa fa-clock-o bg-gray\" /></li>\n        </ul>\n      </div>\n    );\n  }\n}\nTimeline.propTypes = {\n  timelineInfo: PropTypes.array\n};\nTimeline.defaultProps = {\n  timelineInfo: []\n};\n\nexport default Timeline;\n"]}