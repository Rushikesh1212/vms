{"ast":null,"code":"import { dateISOString, xAmzDate, dateYMD } from \"./Date\";\nexport default class Policy {\n  static getPolicy(config) {\n    const policy = () => {\n      return {\n        expiration: dateISOString,\n        conditions: [{\n          bucket: config.bucketName\n        }, [\"starts-with\", \"$key\", \"\".concat(config.dirName ? config.dirName + \"/\" : \"\")], {\n          acl: \"public-read\"\n        }, [\"starts-with\", \"$Content-Type\", \"\"], {\n          \"x-amz-meta-uuid\": \"14365123651274\"\n        }, {\n          \"x-amz-server-side-encryption\": \"AES256\"\n        }, [\"starts-with\", \"$x-amz-meta-tag\", \"\"], {\n          \"x-amz-credential\": \"\".concat(config.accessKeyId, \"/\").concat(dateYMD, \"/\").concat(config.region, \"/s3/aws4_request\")\n        }, {\n          \"x-amz-algorithm\": \"AWS4-HMAC-SHA256\"\n        }, {\n          \"x-amz-date\": xAmzDate\n        }]\n      };\n    }; //Returns a base64 policy;\n\n\n    return new Buffer(JSON.stringify(policy())).toString(\"base64\").replace(/\\n|\\r/, \"\");\n  }\n\n}\n;","map":null,"metadata":{},"sourceType":"module"}