{"ast":null,"code":"var _jsxFileName = \"/home/iassureit-23/iAssureIT/Projects/vms/vmsadmin/src/coreAdmin/systemSecurity/ConfirmOtp.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport $ from \"jquery\";\nimport './SignUp.css';\n\nclass ConfirmOtp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {// \"subscription\" : {\n      //   user         : Meteor.subscribe(\"userfunction\"), \n      // }\n    };\n  }\n\n  confirmOTP(event) {\n    console.log('confirm otp');\n    event.preventDefault();\n    var url = this.props.match.params;\n    console.log('url = ', url); // var checkUserExist = FlowRouter.getParam(\"mailId\");\n    // var userData = Meteor.users.findOne({\"_id\":checkUserExist});\n    // if(userData){\n    //   var userProfile = userData.profile;    \n    //   var roles = userData.roles;\n    //   if(userProfile){\n    //     var sessionValue2 = userProfile.sentEmailOTP;\n    //   }\n    // }\n    // if(sessionValue2){\n    //   var mailotp = sessionValue2;\n    //   var newID = userData._id;\n    //   var userData = Meteor.users.findOne({\"_id\":newID});\n    //   if(userData){\n    //     var userEmail = userData.username;\n    //     var profile = userData.profile;\n    //     if(profile){\n    //       if(profile.userCode){\n    //       var password = profile.userCode.split(\"\").reverse().join(\"\"); \n    //       }\n    //     }\n    //   }\n    // }else{\n    //   var username = $('input[name=\"loginusername\"]').val();\n    //   var userOtp = Meteor.users.findOne({\"username\":username});\n    //   if(userOtp){\n    //     var mailotp = userOtp.profile.sentEmailOTP;\n    //     if(userOtp.profile.userCode){\n    //       var usercode = userOtp.profile.userCode.split(\"\").reverse().join(\"\");\n    //       var newID = userOtp._id;\n    //     }\n    //   }\n    // }\n    // var emailotp = this.refs.emailotp.value;\n    // if(mailotp == emailotp){\n    //   Meteor.call('createUserByAdminSetEmailToTrue',newID,\n    //   function(error,result){\n    //     if(error){\n    //       // console.log(error.reason,\"danger\",\"growl-top-right\");\n    //     }else{\n    //       if($('#OTPMobMail').hasClass('newPassword')){\n    //       }else{\n    //         if(userEmail && password){\n    //           var email = userEmail;\n    //           var passwordVar = password;\n    //         }else{\n    //           var email = username;\n    //           var passwordVar = usercode;\n    //         }\n    //       }  \n    //     }\n    //   });\n    //   Meteor.call('updateOTP', newID , mailotp ,roles, function(error,result){\n    //     if(error){\n    //       swal(\"error\");\n    //     }else{\n    //       var curUrl = location.pathname;\n    //       var urlArray = curUrl.split('/');\n    //       var isFirstOTPurl = urlArray[1];\n    //       if(isFirstOTPurl != 'otpFirstVarification'){\n    //       FlowRouter.go('/resetPassword/'+newID);\n    //       }else{\n    //            Meteor.logout();\n    //            swal(\"OTP Verified Successfully\",\n    //                 // 'Please complete your registration process by completing your profile after login. ',\n    //                 'To continue filling registration form please contact admin first to make your account active.',\n    //               'success');\n    //               FlowRouter.go('/');\n    //       }\n    //     }\n    //   });\n    // }else{\n    //   swal('OTP is Incorrect',\n    //         '',\n    //         'warning');\n    // }\n    // $('#assureIDModal').show();\n  }\n\n  inputEffect(event) {\n    event.preventDefault();\n\n    if ($(event.target).val() != \"\") {\n      $(event.target).addClass(\"has-content\");\n    } else {\n      $(event.target).removeClass(\"has-content\");\n    }\n  }\n\n  resendOtp(event) {\n    event.preventDefault();\n    var element = document.getElementById(\"resendOtpBtn\");\n    element.classList.add(\"btn-success\");\n    element.classList.remove(\"resendOtpColor\"); // var checkUserExist = FlowRouter.getParam(\"mailId\");\n    // var userData = Meteor.users.findOne({\"_id\":checkUserExist});\n    // if(userData){\n    //   var userProfile = userData.profile;    \n    //   if(userProfile){\n    //     var sessionValue2 = userProfile.sentEmailOTP;\n    //     var mobNumber = userProfile.mobNumber;\n    //     var firstName  = userProfile.firstname;\n    //   }\n    //    var emailotp = Math.floor(100000 + Math.random() * 900000);\n    //   Meteor.call('addOTP', userData._id, emailotp, function(error,result){\n    //     if(error){\n    //       console.log(error);\n    //     }else{\n    //       Meteor.call(\"sendSMSMsg\",firstName,mobNumber,emailotp,(error,result)=>{\n    //         if(error){\n    //         }else{\n    //           swal(\"We have sent OTP to your registered mobile number\",\"\",\"success\");\n    //              $(\"input[name=emailotp]\").val('');   \n    //           element.classList.add(\"resendOtpColor\");\n    //           element.classList.remove(\"btn-success\");\n    //         }\n    //       });\n    //     }\n    //   });\n    // }else{\n    //   swal(\"You are not registered\",\"\",\"warning\");\n    // }\n  }\n\n  render() {\n    // if(location.pathname=='/forgotOTPVarification/'+FlowRouter.getParam(\"mailId\")){\n    //    var mobileEmail = 'Email Id';\n    //    var resendOtp ='';\n    // }else{\n    var resendOtpWrap = \"resendOtpWrap resendOtpWrapcss\";\n    var mobileEmail = 'Mobile Number';\n    var resendOtp = React.createElement(\"span\", {\n      onClick: this.resendOtp.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Resend OTP\"); // }\n\n    var winHeight = window.innerHeight;\n    var divHeight = winHeight / 4.5 + 'px';\n    return React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12 signUpWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-12 signupPadding signUpFormWrap bg-success\",\n      style: {\n        \"height\": winHeight\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divConfirmOtpModalWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-sm-12 col-xs-12\",\n      className: \"firstverification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"We have sent you a Verification Code to your registered \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"mobile and Email \"), \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      id: \"OTPMobMail\",\n      onSubmit: this.confirmOTP.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 veriemail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-left col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Enter six digit verification code received on \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Email\"), \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"input-effect input-group veribtm1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"effect-21 form-control loginInputs \",\n      ref: \"emailotp\",\n      name: \"emailotp\",\n      onBlur: this.inputEffect.bind(this),\n      \"aria-describedby\": \"basic-addon1\",\n      title: \"Please enter numbers only!\",\n      maxLength: \"6\",\n      pattern: \"(0|[0-9]*)\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"input-group-addon glyphi-custommm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-key\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"focus-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"text-left col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Enter four digit verification code received on \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Mobile\"), \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"input-effect input-group veribtm1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"effect-21 form-control loginInputs \",\n      ref: \"emailotp\",\n      name: \"emailotp\",\n      onBlur: this.inputEffect.bind(this),\n      \"aria-describedby\": \"basic-addon1\",\n      title: \"Please enter numbers only!\",\n      maxLength: \"4\",\n      pattern: \"(0|[0-9]*)\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"input-group-addon glyphi-custommm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-key\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"focus-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12 veriemail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-info submitBtn col-lg-12 col-md-12 col-sm-12 col-xs-12 UMloginbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-4 col-sm-4 col-xs-4 pdcls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"UMGrey signInbtn veriemailmr veriemail col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Sign In\")), React.createElement(\"div\", {\n      id: \"resendOtpBtn\",\n      className: \"col-lg-4 col-md-4 col-sm-4 col-xs-4 resendOtpColor \" + resendOtpWrap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, resendOtp))))));\n  }\n\n}\n\nexport default ConfirmOtp;","map":{"version":3,"sources":["/home/iassureit-23/iAssureIT/Projects/vms/vmsadmin/src/coreAdmin/systemSecurity/ConfirmOtp.js"],"names":["React","Component","Link","swal","$","ConfirmOtp","constructor","props","state","confirmOTP","event","console","log","preventDefault","url","match","params","inputEffect","target","val","addClass","removeClass","resendOtp","element","document","getElementById","classList","add","remove","render","resendOtpWrap","mobileEmail","bind","winHeight","window","innerHeight","divHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport $ from \"jquery\";\n\n\nimport './SignUp.css';\n\n class ConfirmOtp extends Component {\n    constructor(props){\n      super(props);\n      this.state ={\n        // \"subscription\" : {\n        //   user         : Meteor.subscribe(\"userfunction\"), \n        // }\n      }\n    }\n    confirmOTP(event){\n      console.log('confirm otp');\n      event.preventDefault();\n      var url = this.props.match.params;\n      console.log('url = ',url);\n\n      // var checkUserExist = FlowRouter.getParam(\"mailId\");\n      // var userData = Meteor.users.findOne({\"_id\":checkUserExist});\n      // if(userData){\n      //   var userProfile = userData.profile;    \n      //   var roles = userData.roles;\n\n      //   if(userProfile){\n      //     var sessionValue2 = userProfile.sentEmailOTP;\n\n      //   }\n      // }\n\n      // if(sessionValue2){\n        \n      //   var mailotp = sessionValue2;\n      //   var newID = userData._id;\n      //   var userData = Meteor.users.findOne({\"_id\":newID});\n      //   if(userData){\n\n      //     var userEmail = userData.username;\n      //     var profile = userData.profile;\n      //     if(profile){\n      //       if(profile.userCode){\n      //       var password = profile.userCode.split(\"\").reverse().join(\"\"); \n      //       }\n      //     }\n      //   }\n      // }else{\n\n      //   var username = $('input[name=\"loginusername\"]').val();\n      //   var userOtp = Meteor.users.findOne({\"username\":username});\n      //   if(userOtp){\n      //     var mailotp = userOtp.profile.sentEmailOTP;\n      //     if(userOtp.profile.userCode){\n      //       var usercode = userOtp.profile.userCode.split(\"\").reverse().join(\"\");\n      //       var newID = userOtp._id;\n\n      //     }\n      //   }\n      // }\n      // var emailotp = this.refs.emailotp.value;\n      // if(mailotp == emailotp){\n      //   Meteor.call('createUserByAdminSetEmailToTrue',newID,\n      //   function(error,result){\n      //     if(error){\n      //       // console.log(error.reason,\"danger\",\"growl-top-right\");\n      //     }else{\n      //       if($('#OTPMobMail').hasClass('newPassword')){\n             \n      //       }else{\n             \n      //         if(userEmail && password){\n      //           var email = userEmail;\n      //           var passwordVar = password;\n      //         }else{\n      //           var email = username;\n      //           var passwordVar = usercode;\n      //         }\n      //       }  \n      //     }\n      //   });\n\n      //   Meteor.call('updateOTP', newID , mailotp ,roles, function(error,result){\n      //     if(error){\n      //       swal(\"error\");\n      //     }else{\n      //       var curUrl = location.pathname;\n      //       var urlArray = curUrl.split('/');\n      //       var isFirstOTPurl = urlArray[1];\n      //       if(isFirstOTPurl != 'otpFirstVarification'){\n      //       FlowRouter.go('/resetPassword/'+newID);\n      //       }else{\n              \n      //            Meteor.logout();\n      //            swal(\"OTP Verified Successfully\",\n      //                 // 'Please complete your registration process by completing your profile after login. ',\n      //                 'To continue filling registration form please contact admin first to make your account active.',\n      //               'success');\n      //               FlowRouter.go('/');\n               \n      //       }\n      //     }\n      //   });\n      // }else{\n      //   swal('OTP is Incorrect',\n      //         '',\n      //         'warning');\n      // }\n    // $('#assureIDModal').show();\n    }\n\n\n\n    inputEffect(event){\n      event.preventDefault();\n      if($(event.target).val() != \"\"){\n        $(event.target).addClass(\"has-content\");\n      }else{\n        $(event.target).removeClass(\"has-content\");\n      }\n    }\n\n    resendOtp(event){\n      event.preventDefault();\n      var element = document.getElementById(\"resendOtpBtn\");\n      element.classList.add(\"btn-success\");\n      element.classList.remove(\"resendOtpColor\");\n      // var checkUserExist = FlowRouter.getParam(\"mailId\");\n      // var userData = Meteor.users.findOne({\"_id\":checkUserExist});\n      // if(userData){\n      //   var userProfile = userData.profile;    \n      //   if(userProfile){\n      //     var sessionValue2 = userProfile.sentEmailOTP;\n      //     var mobNumber = userProfile.mobNumber;\n      //     var firstName  = userProfile.firstname;\n\n      //   }\n      //    var emailotp = Math.floor(100000 + Math.random() * 900000);\n\n      //   Meteor.call('addOTP', userData._id, emailotp, function(error,result){\n      //     if(error){\n      //       console.log(error);\n      //     }else{\n\n      //       Meteor.call(\"sendSMSMsg\",firstName,mobNumber,emailotp,(error,result)=>{\n      //         if(error){\n\n      //         }else{\n      //           swal(\"We have sent OTP to your registered mobile number\",\"\",\"success\");\n      //              $(\"input[name=emailotp]\").val('');   \n      //           element.classList.add(\"resendOtpColor\");\n      //           element.classList.remove(\"btn-success\");\n      //         }\n      //       });\n      //     }\n      //   });\n      // }else{\n      //   swal(\"You are not registered\",\"\",\"warning\");\n      // }\n\n    }\n\n\n  render(){\n    // if(location.pathname=='/forgotOTPVarification/'+FlowRouter.getParam(\"mailId\")){\n    //    var mobileEmail = 'Email Id';\n    //    var resendOtp ='';\n    // }else{\n      var resendOtpWrap = \"resendOtpWrap resendOtpWrapcss\";\n      var mobileEmail = 'Mobile Number';\n      var resendOtp = <span onClick={this.resendOtp.bind(this)}>Resend OTP</span>;\n    // }\n\n    var winHeight = window.innerHeight;\n    var divHeight = winHeight/4.5+'px';\n\n    return(\n      <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 signUpWrapper\">\n        <div className=\"col-lg-4 col-lg-offset-4 col-md-6 col-md-offset-3 col-sm-12 signupPadding signUpFormWrap bg-success\" style={{\"height\": winHeight}}>\n          <div className=\"divConfirmOtpModalWrap\">\n            <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\" className=\"firstverification\">\n              <div className=\"text-center col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\">\n                <span>We have sent you a Verification Code to your registered <b>mobile and Email </b>.<br/><br/></span>\n              </div>\n              <form id=\"OTPMobMail\" onSubmit={this.confirmOTP.bind(this)}>\n                <div className=\"col-lg-12 col-md-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 veriemail\">\n                  <div className=\"text-left col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\">\n                    <span>Enter six digit verification code received on <b>Email</b>.<br/></span>\n                  </div>\n                  <div className=\"input-effect input-group veribtm1\">\n                    <input type=\"text\" className=\"effect-21 form-control loginInputs \" ref=\"emailotp\" name=\"emailotp\" onBlur={this.inputEffect.bind(this)} aria-describedby=\"basic-addon1\" title=\"Please enter numbers only!\" maxLength=\"6\" pattern=\"(0|[0-9]*)\" required/>\n                    <span className=\"input-group-addon glyphi-custommm\"><i className=\"fa fa-key\" aria-hidden=\"true\"></i></span>\n                    <span className=\"focus-border\">\n                      <i></i>\n                    </span>\n                  </div>\n                  <div className=\"text-left col-lg-12 col-md-12 col-sm-12 col-xs-12 otpHeader\">\n                    <span>Enter four digit verification code received on <b>Mobile</b>.<br/></span>\n                  </div>\n                  <div className=\"input-effect input-group veribtm1\">\n                    <input type=\"text\" className=\"effect-21 form-control loginInputs \" ref=\"emailotp\" name=\"emailotp\" onBlur={this.inputEffect.bind(this)} aria-describedby=\"basic-addon1\" title=\"Please enter numbers only!\" maxLength=\"4\" pattern=\"(0|[0-9]*)\" required/>\n                    <span className=\"input-group-addon glyphi-custommm\"><i className=\"fa fa-key\" aria-hidden=\"true\"></i></span>\n                    <span className=\"focus-border\">\n                      <i></i>\n                    </span>\n                  </div>\n                </div>\n                <div className=\"submitButtonWrapper col-lg-12 col-md-12 col-sm-12 col-xs-12 veriemail\">\n                  <button type=\"submit\" className=\"btn btn-info submitBtn col-lg-12 col-md-12 col-sm-12 col-xs-12 UMloginbutton\">Submit</button>\n                </div>\n                <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-4 pdcls\">\n                  <Link to='/' className=\"UMGrey signInbtn veriemailmr veriemail col-lg-12\">Sign In</Link>  \n                </div>\n                <div id=\"resendOtpBtn\" className={\"col-lg-4 col-md-4 col-sm-4 col-xs-4 resendOtpColor \"+resendOtpWrap}>\n                  {resendOtp}\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ConfirmOtp;"]},"metadata":{},"sourceType":"module"}